name: ext-swoole

on: [push, pull_request]

jobs:
  build-ubuntu-latest:
    if: "!contains(github.event.head_commit.message, '[test]')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: install-deps
      run: sudo apt update -y && sudo apt install -y libcurl4-openssl-dev php-curl libc-ares-dev
    - name: phpize
      run: phpize
    - name: build1
      run: ./configure &&
        make clean && make -j$(nproc)
    - name: build2
      run: ./configure --enable-sockets &&
        make clean && make -j$(nproc)
    - name: build3
      run: ./configure --enable-sockets --enable-mysqlnd &&
        make clean && make -j$(nproc)
    - name: build5
      run: ./configure --enable-sockets --enable-mysqlnd --enable-openssl &&
        make clean && make -j$(nproc)
    - name: build6
      run: ./configure --enable-sockets --enable-mysqlnd --enable-openssl --enable-debug-log &&
        make clean && make -j$(nproc)
    - name: build7
      run: ./configure --enable-sockets --enable-mysqlnd --enable-swoole-curl --enable-openssl --enable-debug-log &&
        make clean && make -j$(nproc)
    - name: build8
      run: ./configure --enable-sockets --enable-mysqlnd --enable-swoole-curl --enable-openssl --enable-cares --enable-debug-log &&
        make clean && make -j$(nproc)
    - name: build with thread context
      run: ./configure --enable-sockets --enable-mysqlnd --enable-swoole-curl --enable-openssl --enable-cares --enable-debug-log --enable-thread-context &&
        make clean && make -j$(nproc)

  build-macos-latest:
    if: "!contains(github.event.head_commit.message, '[test]')"
    runs-on: macos-latest
    steps:
    - name: install dependencies
      run: brew install openssl && brew link openssl && brew install curl && brew link curl && brew install c-ares && brew link c-ares
    - uses: actions/checkout@v4
    - name: phpize
      run: phpize
    - name: build1
      run: ./configure && make clean && make -j$(sysctl -n hw.ncpu)
    - name: build2
      run: ./configure --enable-sockets &&
        make clean && make -j$(sysctl -n hw.ncpu)
    - name: build3
      run: ./configure --enable-sockets --enable-mysqlnd &&
        make clean && make -j$(sysctl -n hw.ncpu)
    - name: build5
      run: ./configure --enable-sockets --enable-mysqlnd --enable-openssl
        --with-openssl-dir=/usr/local/opt/openssl@1.1 &&
        make clean && make -j$(sysctl -n hw.ncpu)
    - name: build6
      run: ./configure --enable-sockets --enable-mysqlnd  --enable-openssl --enable-swoole-curl --enable-debug-log
        --with-openssl-dir=/usr/local/opt/openssl@1.1 &&
        make clean && make -j$(sysctl -n hw.ncpu)
    - name: build7
      run: ./configure --enable-sockets --enable-mysqlnd --enable-openssl --enable-swoole-curl --enable-debug-log --enable-cares
        --with-openssl-dir=/usr/local/opt/openssl@1.1 &&
        make clean && make -j$(sysctl -n hw.ncpu)

  build-alpine-latest:
    if: "!contains(github.event.head_commit.message, '[test]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: [ '8.0', '8.1' ]
        alpine-version: [ '3.14', '3.15' ]
        exclude:
          - php-version: '8.1'
            alpine-version: '3.15'
      max-parallel: 8
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: build
        run: |
          cp .github/workflows/alpine.Dockerfile alpine.Dockerfile
          docker build -t swoole . -f alpine.Dockerfile --build-arg PHP_VERSION=${{ matrix.php-version }} --build-arg ALPINE_VERSION=${{ matrix.alpine-version }}
