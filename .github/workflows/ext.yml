name: ext-swoole

on: [push, pull_request]

jobs:
  build-swoole:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-16.04, macos-latest]
        php: [7.2, 7.3, 7.4, 8.0, 8.1]
    steps:
    - uses: actions/checkout@v1
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: "${{ matrix.php }}"
        coverage: none
    - name: Show machine information
      run: |
        date
        env
        uname -a
        ulimit -a
        php -v
        php -m
        php --ini
        ls -al
        pwd
        echo "`git log -20 --pretty --oneline`"
        echo "`git log -10 --stat --pretty --oneline`"
    - if: startsWith(runner.os, 'Linux')
      name: Install dependencies on Linux
      run: |
        sudo apt update -y && sudo apt install -y libcurl4-openssl-dev php-curl
    - if: startsWith(runner.os, 'macOS')
      name: Install dependencies on macOS
      run: |
        brew install pkg-config && openssl && brew link openssl && brew install curl && brew link curl
        cp /usr/local/opt/openssl@1.1/lib/pkgconfig/* /usr/local/lib/pkgconfig/
    - name: phpize
      run: phpize
    - name: build1
      run: ./configure && make clean && make -j$(sysctl -n hw.ncpu)
    - name: build2
      run: ./configure --enable-sockets &&
        make clean && make -j$(sysctl -n hw.ncpu)
    - name: build3
      run: ./configure --enable-sockets --enable-mysqlnd && make clean &&
        make -j$(sysctl -n hw.ncpu)
    - name: build4
      run: ./configure --enable-sockets --enable-mysqlnd --enable-http2 &&
        make clean && make -j$(sysctl -n hw.ncpu)
    - name: build5
      run: ./configure --enable-sockets --enable-mysqlnd --enable-http2 --enable-openssl &&
        make clean && make -j$(sysctl -n hw.ncpu)
    - name: build6
      run: ./configure --enable-sockets --enable-mysqlnd --enable-http2 --enable-openssl --enable-debug-log &&
        make clean && make -j$(sysctl -n hw.ncpu)
    - name: build7
      run: ./configure --enable-sockets --enable-mysqlnd --enable-http2 --enable-swoole-curl --enable-swoole-json 
        --enable-openssl --enable-debug-log &&
        make clean && make -j$(sysctl -n hw.ncpu)

  build-alpine-latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: build
        run: cp .github/workflows/alpine.Dockerfile alpine.Dockerfile && docker build -t swoole . -f alpine.Dockerfile
