name: Core Tests

on: [ push, pull_request ]

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '--filter=') || contains(github.event.head_commit.message, '[core]')"
    timeout-minutes: 10
    services:
      tinyproxy:
        image: "vimagick/tinyproxy"
        ports:
          - 8888:8888
      nginx:
        image: "nginx"
        ports:
          - "80:80"
        env:
          NGINX_PORT: "[::]:80"
      socks5:
        image: "xkuma/socks5"
        ports:
          - 8080:1080
        env:
          PROXY_USER: user
          PROXY_PASSWORD: password
          PROXY_SERVER: 0.0.0.0:1080

    steps:
      - uses: actions/checkout@v4

      - name: install dependencies
        run: sudo apt update -y && sudo apt install -y googletest libgtest-dev redis-server libboost-stacktrace-dev libbrotli-dev nodejs npm

      - name: configure
        run: phpize && ./configure --enable-sockets --enable-mysqlnd --enable-openssl

      - name: make
        run: |
          cmake . -D CODE_COVERAGE=ON -D enable_thread=1
          make VERBOSE=1 -j $(nproc) lib-swoole

      - name: make test
        run: |
          export GITHUB_COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          if [[ "$GITHUB_COMMIT_MESSAGE" == *"--valgrind"* ]]; then
            export SWOOLE_VALGRIND=1
          fi
          if [[ "$GITHUB_COMMIT_MESSAGE" == *"--asan"* ]]; then
              export SWOOLE_ENABLE_ASAN=1
          fi
          if [[ "$GITHUB_COMMIT_MESSAGE" == *"--strace"* ]]; then
              export SWOOLE_ENABLE_STRACE=1
          fi
          echo "SWOOLE_VALGRIND=${SWOOLE_VALGRIND}"
          echo "SWOOLE_ENABLE_ASAN=${SWOOLE_ENABLE_ASAN}"
          echo "SWOOLE_ENABLE_STRACE=${SWOOLE_ENABLE_STRACE}"
          cd core-tests && ./run.sh

      - name: run coverage
        shell: bash
        run: sudo apt-get install lcov &&
          sudo lcov --directory . --capture --branch-coverage --rc geninfo_unexecuted_blocks=1 --ignore-errors mismatch --output-file coverage.info &&
          sudo lcov --remove coverage.info '/usr/*' --output-file coverage.info &&
          sudo lcov --list coverage.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.info
          fail_ci_if_error: true
